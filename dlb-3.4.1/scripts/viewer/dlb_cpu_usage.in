#!/usr/bin/env python2

import Tkinter as tk
import ttk
import tkMessageBox
import random

import sys
sys.path.append(@PYTHONDIR@)
import dlb_viewer


class MainApplication(tk.Frame):
    def __init__(self, parent, *args, **kwargs):
        tk.Frame.__init__(self, parent, *args, **kwargs)
        self.parent = parent
        self.CheckVar = tk.IntVar()
        self.initialize()

    def initialize(self):
        # Widgets
        self.start_btn = ttk.Button(self, text="Start", command=self.start)
        self.stop_btn = ttk.Button(self, text="Stop", command=self.stop)
        self.quit_btn = ttk.Button(self, text="Quit", command=self.parent.destroy)
        self.add_random_btn = ttk.Button(self, text="Add Random Process", command=self.add_random_process)
        self.add_entry_btn = ttk.Button(self, text="Add Process:", command=self.add_process)
        self.entry = ttk.Entry(self, width=16)
        self.entry.bind("<Return>", self.add_process)
        self.reset_btn = ttk.Button(self, text="Reset DLB Viewer:", command=self.reset)
        self.check = ttk.Checkbutton(self, text="Normalize to 100%", variable=self.CheckVar, command=self.check_normalized)
        self.separator = ttk.Separator(self, orient="horizontal")
        self.viewer = dlb_viewer.DLBViewer(self, refresh_time=100, debug=True)

        # Grid
        self.grid()
        self.start_btn.grid(row=0, column=0, sticky="WE")
        self.stop_btn.grid(row=0, column=1, sticky="WE")
        self.quit_btn.grid(row=0, column=2, sticky="WE")
        self.add_random_btn.grid(row=1, column=0, sticky="WE")
        self.add_entry_btn.grid(row=1, column=1, sticky="E")
        self.entry.grid(row=1, column=2, sticky="WE")
        self.reset_btn.grid(row=2, column=0, sticky="WE")
        self.check.grid(row=2, column=1, columnspan=2, sticky="WE")
        self.separator.grid(row=3, column=0, columnspan=3, sticky="WE", pady=10)
        self.viewer.grid(row=4, column=0, columnspan=3, sticky="WE")

    def start(self):
        if self.viewer.empty():
            tkMessageBox.showinfo("Warning", "Add some process before starting")
        if self.viewer:
            self.viewer.start()

    def stop(self):
        if self.viewer:
            self.viewer.stop()

    def add_random_process(self):
        self.viewer.add_process(random.randint(1, 32768))

    def add_process(self, event=None):
        text_entry = self.entry.get()
        if len(text_entry) != 0:
            self.viewer.add_process(int(text_entry))
            self.entry.delete(0, tk.END)

    def reset(self):
        self.viewer.destroy()
        self.viewer = dlb_viewer.DLBViewer(self, refresh_time=100, debug=True)
        self.viewer.grid(row=4, column=0, columnspan=3)

    def check_normalized(self):
        self.viewer.set_normalized(self.CheckVar.get())


if __name__ == "__main__":
    root = tk.Tk()
    root.title("DLB CPU Usage")
    root.columnconfigure(0, weight=1)
    MainApplication(root)
    root.mainloop()
